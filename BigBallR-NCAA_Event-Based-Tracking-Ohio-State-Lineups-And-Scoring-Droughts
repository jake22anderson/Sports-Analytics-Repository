# install.packages("devtools")
# devtools::install_github("jflancer/bigballR")
library(bigballR)
library(tidyverse)
library(dplyr)
library(readxl)
library(moderndive)
library(rstanarm)

osu_schedule <- get_team_schedule(season = "2018-19", team.name = "Ohio St.")
play_by_play <- get_play_by_play(osu_schedule$Game_ID)
View(play_by_play)
lineups <- get_lineups(play_by_play_data = play_by_play, keep.dirty = T, garbage.filter = F)
# View(lineups)

# Look at on/off statistics
luther_muhammad_comparison <- on_off_generator("LUTHER.MUHAMMAD", lineups)
kaleb_wesson_comparison <- on_off_generator("KALEB.WESSON", lineups)
keyshawn_woods_comparison <- on_off_generator("KEYSHAWN.WOODS", lineups)
# View(luther_muhammad_comparison)
# View(kaleb_wesson_comparison)
# View(keyshawn_woods_comparison)
luther_muhammad_w_kaleb_wesson_comparison <- on_off_generator("LUTHER.MUHAMMAD", lineups, Included = c("KALEB.WESSON"))
luther_muhammad_w_duane_washington_comparison <- on_off_generator("LUTHER.MUHAMMAD", lineups, Included = c("DUANE.WASHINGTON.JR"))
# View(luther_muhammad_w_duane_washington_comparison)
ggplot(luther_muhammad_comparison, aes(x = Status, y = NETEFF, fill = Mins)) + geom_bar(stat="identity")

# how can i find the best 5 man lineup?
lineups %>% 
  filter(Mins >= 20, Team == "Ohio St.") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)
lineups %>% 
  filter(Mins >= 40, Team == "Ohio St.") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)
lineups %>% 
  filter(Mins >= 10, Team == "Ohio St.") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)
ggplot(lineups %>% 
         filter(Mins >= 20, Team == "Ohio St.") %>% 
         select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
         arrange(-NETEFF), aes(x = Mins, y = NETEFF)) + 
         geom_point()
ggplot(lineups %>% 
         filter(Mins >= 40, Team == "Ohio St.") %>% 
         select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
         arrange(-NETEFF), aes(x = Mins, y = NETEFF)) + 
         geom_point()

# how can i find the single player that is involved in the most of these lineups?


# why do luther and duane perform badly when they play together? is it their fault or do they have a bad team around them?
lineups %>% 
  filter(Mins >= 20, Team == "Ohio St.", P1 == "LUTHER.MUHAMMAD" | P2 == "LUTHER.MUHAMMAD" | P3 == "LUTHER.MUHAMMAD" | P4 == "LUTHER.MUHAMMAD" | P5 == "LUTHER.MUHAMMAD", P1 == "DUANE.WASHINGTON.JR" | P2 == "DUANE.WASHINGTON.JR" | P3 == "DUANE.WASHINGTON.JR" | P4 == "DUANE.WASHINGTON.JR" | P5 == "DUANE.WASHINGTON.JR") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)

# how do i find the highest net rating for a player


# analyzing some play by play for scoring droughts
play_by_play_msu_away <- play_by_play %>% filter(Home == "Michigan St.")

# View(play_by_play_msu_away)
  # analyzing time between osu scoring
i = 1
x = 1
last_score_time = 0
recent_score_time = 0
time_between_scores = 0
for (i in 1:nrow(play_by_play_msu_away)) {
  if (play_by_play_msu_away$Away_Score[i+1] > play_by_play_msu_away$Away_Score[i]) {
    recent_score_time <- play_by_play_msu_away$Game_Time[i + 1]
    recent_score_list <- strsplit(recent_score_time, ":")
    recent_store_list <- unlist(recent_score_list)
    minute <- as.double(recent_store_list[[1]])
    second <- as.double(recent_store_list[[2]])/60
    recent_score_time <- minute + second
    time_between_scores[x] <- recent_score_time - last_score_time
    x = x + 1
    last_score_time <- recent_score_time
  }
  if (i + 2 > nrow(play_by_play_msu_away)) {
    i = nrow(play_by_play_msu_away) + 1
    print("in loop")
    print(i)
  }
}

# expanding to entire season
i = 1
x = 1
last_score_time = 0
recent_score_time = 0
time_between_scores_osu_away = 0

play_by_play_osu_away <- play_by_play %>% filter(Away == "Ohio St.")
  
for (i in 1:nrow(play_by_play_osu_away)) {
    if (play_by_play_osu_away$Home[i+1] != play_by_play_osu_away$Home[i]) {
      last_score_time = 0
    }
    if (play_by_play_osu_away$Away_Score[i+1] > play_by_play_osu_away$Away_Score[i]) {
      recent_score_time <- play_by_play_osu_away$Game_Time[i + 1]
      recent_score_list <- strsplit(recent_score_time, ":")
      recent_store_list <- unlist(recent_score_list)
      minute <- as.double(recent_store_list[[1]])
      second <- as.double(recent_store_list[[2]])/60
      recent_score_time <- minute + second
      time_between_scores_osu_away[x] <- recent_score_time - last_score_time
      x = x + 1
      last_score_time <- recent_score_time
    }
    if (i + 2 > nrow(play_by_play_osu_away)) {
     i = nrow(play_by_play_osu_away) + 1
    }
  } 

i = 1
x = 1
last_score_time = 0
recent_score_time = 0 
time_between_scores_osu_home = 0

play_by_play_osu_home <- play_by_play %>% filter(Home == "Ohio St.")

for (i in 1:nrow(play_by_play_osu_home)) {
  if (play_by_play_osu_home$Away[i+1] != play_by_play_osu_home$Away[i]) {
   last_score_time = 0
  }
  if (play_by_play_osu_home$Home_Score[i+1] > play_by_play_osu_home$Home_Score[i]) {
    recent_score_time <- play_by_play_osu_home$Game_Time[i + 1]
    recent_score_list <- strsplit(recent_score_time, ":")
    recent_store_list <- unlist(recent_score_list)
    minute <- as.double(recent_store_list[[1]])
    second <- as.double(recent_store_list[[2]])/60
    recent_score_time <- minute + second
    time_between_scores_osu_home[x] <- recent_score_time - last_score_time
    x = x + 1
    last_score_time <- recent_score_time
  }
  if (i + 2 > nrow(play_by_play_osu_home)) {
    i = nrow(play_by_play_osu_home) + 1
  }
}
# time_between_scores_osu_home
# time_between_scores_osu_away

sum(time_between_scores_osu_home > 4)
sum(time_between_scores_osu_away > 4)
time_between_all_scores <- c(time_between_scores_osu_home, time_between_scores_osu_away)
sum(time_between_all_scores > 4)
mean(time_between_all_scores)

  # take away free throws
time_between_all_scores_no_fts <- time_between_all_scores[time_between_all_scores > 0]
time_between_scores_osu_home_no_fts <- time_between_scores_osu_home[time_between_scores_osu_home > 0]
time_between_scores_osu_away_no_fts <- time_between_scores_osu_away[time_between_scores_osu_away > 0]
sum(time_between_all_scores_no_fts > 4)
mean(time_between_all_scores_no_fts)

  # simple visualizations
ggplot(data.frame(time_between_all_scores), aes(x = time_between_all_scores, fill="darkred")) + 
  geom_histogram()

  # making time_between_all_scores a dataframe with home and away scores

i = 1
x = 1
last_score_time = 0
recent_score_time = 0 
time_between_scores_osu_home_df = 0
home_score = 0
away_score = 0

play_by_play_osu_home <- play_by_play %>% filter(Home == "Ohio St.")

for (i in 1:nrow(play_by_play_osu_home)) {
    if (play_by_play_osu_home$Away[i+1] != play_by_play_osu_home$Away[i]) {
    last_score_time = 0
    }
  if (play_by_play_osu_home$Home_Score[i+1] > play_by_play_osu_home$Home_Score[i]) {
    recent_score_time <- play_by_play_osu_home$Game_Time[i + 1]
    recent_score_list <- strsplit(recent_score_time, ":")
    recent_store_list <- unlist(recent_score_list)
    minute <- as.double(recent_store_list[[1]])
    second <- as.double(recent_store_list[[2]])/60
    recent_score_time <- minute + second
    time_between_scores_osu_home_df[x] <- recent_score_time - last_score_time
    last_score_time <- recent_score_time
    home_score[x] = play_by_play_osu_home$Home_Score[i+1]
    away_score[x] = play_by_play_osu_home$Away_Score[i+1]
    x = x + 1
  }
  if (i + 2 > nrow(play_by_play_osu_home)) {
    i = nrow(play_by_play_osu_home) + 1
  }
}

time_between_scores_osu_home_df <- data.frame(time_between_scores_osu_home_df, home_score, away_score)

# figure out this ranged fill
# visualizations
ggplot(time_between_scores_osu_home_df, aes(x = time_between_scores_osu_home)) +
  geom_histogram() + 
  scale_fill_manual(values = unique(time_between_scores_osu_home_df$home_score - time_between_scores_osu_home_df$away_score))

ggplot(time_between_scores_osu_home_df, aes(x = time_between_scores_osu_home_df)) + 
  geom_histogram(aes(color = home_score - away_score), fill = "red") + 
  theme_minimal()

ggplot(time_between_scores_osu_home_df, aes(x = time_between_scores_osu_home_df, y = home_score-away_score, color = "red")) + 
  geom_point() + 
  ylab("Ohio State Score Differential")

# comparision to duke
duke_schedule <- get_team_schedule(season = "2018-19", team.name = "Duke")
play_by_play_duke <- get_play_by_play(duke_schedule$Game_ID)

i = 1
x = 1
last_score_time = 0
recent_score_time = 0
time_between_scores_duke_away = 0

play_by_play_duke_away <- play_by_play_duke %>% filter(Away == "Duke")

for (i in 1:nrow(play_by_play_duke_away)) {
  if (play_by_play_duke_away$Home[i+1] != play_by_play_duke_away$Home[i]) {
    last_score_time = 0
  }
  if (play_by_play_duke_away$Away_Score[i+1] > play_by_play_duke_away$Away_Score[i]) {
    recent_score_time <- play_by_play_duke_away$Game_Time[i + 1]
    recent_score_list <- strsplit(recent_score_time, ":")
    recent_store_list <- unlist(recent_score_list)
    minute <- as.double(recent_store_list[[1]])
    second <- as.double(recent_store_list[[2]])/60
    recent_score_time <- minute + second
    time_between_scores_duke_away[x] <- recent_score_time - last_score_time
    x = x + 1
    last_score_time <- recent_score_time
  }
  if (i + 2 > nrow(play_by_play_duke_away)) {
    i = nrow(play_by_play_duke_away) + 1
  }
} 

i = 1
x = 1
last_score_time = 0
recent_score_time = 0 
time_between_scores_duke_home = 0

play_by_play_duke_home <- play_by_play_duke %>% filter(Home == "Duke")

for (i in 1:nrow(play_by_play_duke_home)) {
  if (play_by_play_duke_home$Away[i+1] != play_by_play_duke_home$Away[i]) {
    last_score_time = 0
  }
  if (play_by_play_duke_home$Home_Score[i+1] > play_by_play_duke_home$Home_Score[i]) {
    recent_score_time <- play_by_play_duke_home$Game_Time[i + 1]
    recent_score_list <- strsplit(recent_score_time, ":")
    recent_store_list <- unlist(recent_score_list)
    minute <- as.double(recent_store_list[[1]])
    second <- as.double(recent_store_list[[2]])/60
    recent_score_time <- minute + second
    time_between_scores_duke_home[x] <- recent_score_time - last_score_time
    x = x + 1
    last_score_time <- recent_score_time
  }
  if (i + 2 > nrow(play_by_play_duke_home)) {
    i = nrow(play_by_play_duke_home) + 1
  }
}
# time_between_scores_duke_home
# time_between_scores_duke_away

sum(time_between_scores_duke_home > 4)
sum(time_between_scores_duke_away > 4)
time_between_all_scores_duke <- c(time_between_scores_duke_home, time_between_scores_duke_away)
sum(time_between_all_scores_duke > 4)
mean(time_between_all_scores_duke)
sd(time_between_all_scores_duke)

# take away free throws
time_between_all_scores_duke_no_fts <- time_between_all_scores_duke[time_between_all_scores_duke > 0]
time_between_scores_duke_home_no_fts <- time_between_scores_duke_home[time_between_scores_duke_home > 0]
time_between_scores_duke_away_no_fts <- time_between_scores_duke_away[time_between_scores_duke_away > 0]
sum(time_between_all_scores_duke_no_fts > 4)
mean(time_between_all_scores_duke_no_fts)
