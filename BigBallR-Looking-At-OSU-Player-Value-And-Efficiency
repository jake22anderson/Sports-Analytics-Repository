# install.packages("devtools")
# devtools::install_github("jflancer/bigballR")
library(bigballR)
library(tidyverse)
library(dplyr)
library(readxl)
library(moderndive)
library(rstanarm)

osu_schedule <- get_team_schedule(season = "2018-19", team.name = "Ohio St.")
play_by_play <- get_play_by_play(osu_schedule$Game_ID)
View(play_by_play)
lineups <- get_lineups(play_by_play_data = play_by_play, keep.dirty = T, garbage.filter = F)
# View(lineups)

# accounting for a known error
i = 1
for (i in 1:nrow(lineups)) {
  if (lineups$P1[i] == "DUANE.WASHINGTON JR") {
    lineups$P1[i] = "DUANE.WASHINGTON.JR"
  } else if (lineups$P2[i] == "DUANE.WASHINGTON JR") {
    lineups$P2[i] = "DUANE.WASHINGTON.JR"
  } else if (lineups$P3[i] == "DUANE.WASHINGTON JR") {
    lineups$P3[i] = "DUANE.WASHINGTON.JR"
  } else if (lineups$P4[i] == "DUANE.WASHINGTON JR") {
    lineups$P4[i] = "DUANE.WASHINGTON.JR"
  } else if (lineups$P5[i] == "DUANE.WASHINGTON JR"){
    lineups$P5[i] = "DUANE.WASHINGTON.JR"
  }
}

# Look at on/off statistics
luther_muhammad_comparison <- on_off_generator("LUTHER.MUHAMMAD", lineups)
# View(luther_muhammad_comparison)
luther_muhammad_w_kaleb_wesson_comparison <- on_off_generator("LUTHER.MUHAMMAD", lineups, Included = c("KALEB.WESSON"))
ggplot(luther_muhammad_comparison, aes(x = Status, y = NETEFF, fill = Mins)) + geom_bar(stat="identity")
 
# how can i find the best 5 man lineup?
lineups %>% 
  filter(Mins >= 20, Team == "Ohio St.") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)
lineups %>% 
  filter(Mins >= 40, Team == "Ohio St.") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)
lineups %>% 
  filter(Mins >= 10, Team == "Ohio St.") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)
ggplot(lineups %>% 
         filter(Mins >= 20, Team == "Ohio St.") %>% 
         select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
         arrange(-NETEFF), aes(x = Mins, y = NETEFF)) + 
         geom_point()
ggplot(lineups %>% 
         filter(Mins >= 40, Team == "Ohio St.") %>% 
         select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
         arrange(-NETEFF), aes(x = Mins, y = NETEFF)) + 
         geom_point()

# how can i find the single player that is involved in the most of these lineups?

most_efficient_single_players <- lineups %>%
  filter(Team == "Ohio St.") %>%
  gather(key = num, value = "Player", P1:P5) %>% 
  select(Player, NETEFF, Mins) %>% 
  group_by(Player) %>%
  mutate(total_mins = sum(Mins), w_efficiency = NETEFF*Mins/total_mins) %>% 
  summarize(sum_w_efficiency = sum(w_efficiency))

osu_lineups <- lineups %>% filter(Team == "Ohio St.")
# minutes
osu_minutes_per_player <- osu_lineups %>%
  gather(key = num, value = "Player", P1:P5) %>% 
  select(Player, NETEFF, Mins) %>%
  group_by(Player) %>%
  summarize(total_mins = sum(Mins))

player_names <- most_efficient_single_players$Player
list_on_off_all <- (lapply(X = player_names, FUN = on_off_generator, Lineup_Data = osu_lineups))

NETEFF_ON_OFF <- do.call(rbind.data.frame, list_on_off_all)
NETEFF_ON_OFF <- NETEFF_ON_OFF %>% separate(Status, c("Player", "Status"), " ")

NETEFF_ON_OFF <- NETEFF_ON_OFF %>% 
  select(Player, Status, NETEFF) %>% 
  spread(key = Status, value = NETEFF) %>% 
  mutate(NET_EFF_DIFF = On - Off) %>% 
  left_join(most_efficient_single_players, by = "Player") 
# View(NETEFF_ON_OFF)

ggplot(NETEFF_ON_OFF, aes(x = NET_EFF_DIFF, y = sum_w_efficiency, color = Player, size = osu_minutes_per_player$total_mins)) + 
  geom_point()

# why do luther and duane perform badly when they play together? is it their fault or do they have a bad team around them?
lineups %>% 
  filter(Mins >= 20, Team == "Ohio St.", P1 == "LUTHER.MUHAMMAD" | P2 == "LUTHER.MUHAMMAD" | P3 == "LUTHER.MUHAMMAD" | P4 == "LUTHER.MUHAMMAD" | P5 == "LUTHER.MUHAMMAD", P1 == "DUANE.WASHINGTON.JR" | P2 == "DUANE.WASHINGTON.JR" | P3 == "DUANE.WASHINGTON.JR" | P4 == "DUANE.WASHINGTON.JR" | P5 == "DUANE.WASHINGTON.JR") %>% 
  select(P1, P2, P3, P4, P5, Mins, NETEFF) %>% 
  arrange(-NETEFF)
